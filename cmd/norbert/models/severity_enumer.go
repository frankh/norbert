// Code generated by "enumer -type=Severity"; DO NOT EDIT.

package models

import (
	"fmt"
)

const _SeverityName = "WarningErrorCritical"

var _SeverityIndex = [...]uint8{0, 7, 12, 20}

func (i Severity) String() string {
	i -= 1
	if i < 0 || i >= Severity(len(_SeverityIndex)-1) {
		return fmt.Sprintf("Severity(%d)", i+1)
	}
	return _SeverityName[_SeverityIndex[i]:_SeverityIndex[i+1]]
}

var _SeverityValues = []Severity{1, 2, 3}

var _SeverityNameToValueMap = map[string]Severity{
	_SeverityName[0:7]:   1,
	_SeverityName[7:12]:  2,
	_SeverityName[12:20]: 3,
}

// SeverityString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SeverityString(s string) (Severity, error) {
	if val, ok := _SeverityNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Severity values", s)
}

// SeverityValues returns all values of the enum
func SeverityValues() []Severity {
	return _SeverityValues
}

// IsASeverity returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Severity) IsASeverity() bool {
	for _, v := range _SeverityValues {
		if i == v {
			return true
		}
	}
	return false
}
